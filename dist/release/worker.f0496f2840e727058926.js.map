{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker/index.ts"],"names":["self","chunkIds","moreModules","moduleId","modules","length","installedChunks","pop","installedModules","1","installedWasmModules","wasmImportObjects","8","./julia_wasm","__wbindgen_throw","p0i32","p1i32","exports","__webpack_require__","module","i","l","call","e","chunkId","promises","push","Promise","resolve","then","importScripts","3","forEach","wasmModuleId","installedWasmModuleData","promise","importObject","req","fetch","p","WebAssembly","compileStreaming","all","items","instantiate","instantiateStreaming","x","arrayBuffer","bytes","res","w","instance","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","s","resolveWorkerInitMsg","initialInstructions","workerCore","getWorkerInitMsg","importWorkerCore","__awaiter","this","WorkerCore","initMsg","msg","onmessage","catch","err","postMessage","type","setTimeout","ev","data"],"mappings":"aAAAA,KAAA,sBAAAC,EAAAC,GACA,QAAAC,KAAAD,EACAE,EAAAD,GAAAD,EAAAC,GAEA,KAAAF,EAAAI,QACAC,EAAAL,EAAAM,OAAA,GAIA,IAAAC,KAIAF,GACAG,EAAA,GAIAC,KAIA,IAAAC,GACAC,EAAA,WACA,OACAC,gBACAC,iBAAA,SAAAC,EAAAC,GACA,OAAAR,EAAA,GAAAS,QAAA,iBAAAF,EAAAC,QAQA,SAAAE,EAAAf,GAGA,GAAAK,EAAAL,GACA,OAAAK,EAAAL,GAAAc,QAGA,IAAAE,EAAAX,EAAAL,IACAiB,EAAAjB,EACAkB,GAAA,EACAJ,YAUA,OANAb,EAAAD,GAAAmB,KAAAH,EAAAF,QAAAE,IAAAF,QAAAC,GAGAC,EAAAE,GAAA,EAGAF,EAAAF,QAKAC,EAAAK,EAAA,SAAAC,GACA,IAAAC,KAuCA,OAtCAA,EAAAC,KAAAC,QAAAC,UAAAC,KAAA,WAEAvB,EAAAkB,IACAM,gBAA0BC,EAAA,cAAiBP,OAAA,KAA6BO,EAAA,wBAA2BP,GAAA,YAM7EO,GAAA,IAAQP,QAE9BQ,QAAA,SAAAC,GACA,IAAAC,EAAAxB,EAAAuB,GAGA,GAAAC,EACAT,EAAAC,KAAAQ,OACA,CACA,IAEAC,EAFAC,EAAAzB,EAAAsB,KACAI,EAAAC,MAAApB,EAAAqB,EAAA,IAAmD3B,EAAA,wBAA2BqB,GAAA,gBAE9E,GAAAG,aAAAT,SAAA,mBAAAa,YAAAC,iBACAN,EAAAR,QAAAe,KAAAF,YAAAC,iBAAAJ,GAAAD,IAAAP,KAAA,SAAAc,GACA,OAAAH,YAAAI,YAAAD,EAAA,GAAAA,EAAA,WAEM,sBAAAH,YAAAK,qBACNV,EAAAK,YAAAK,qBAAAR,EAAAD,OACM,CAEND,EADAE,EAAAR,KAAA,SAAAiB,GAA+C,OAAAA,EAAAC,gBAC/ClB,KAAA,SAAAmB,GACA,OAAAR,YAAAI,YAAAI,EAAAZ,KAGAX,EAAAC,KAAAhB,EAAAuB,GAAAE,EAAAN,KAAA,SAAAoB,GACA,OAAA/B,EAAAgC,EAAAjB,IAAAgB,EAAAE,UAAAF,GAAAhC,cAIAU,QAAAe,IAAAjB,IAIAP,EAAAkC,EAAAhD,EAGAc,EAAAmC,EAAA7C,EAGAU,EAAAoC,EAAA,SAAArC,EAAAsC,EAAAC,GACAtC,EAAAuC,EAAAxC,EAAAsC,IACAG,OAAAC,eAAA1C,EAAAsC,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CtC,EAAA4C,EAAA,SAAA7C,GACA,oBAAA8C,eAAAC,aACAN,OAAAC,eAAA1C,EAAA8C,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAA1C,EAAA,cAAiDgD,OAAA,KAQjD/C,EAAAgD,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAA/C,EAAA+C,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFApD,EAAA4C,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAA/C,EAAAoC,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAnD,EAAAuD,EAAA,SAAAtD,GACA,IAAAqC,EAAArC,KAAAiD,WACA,WAA2B,OAAAjD,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAD,EAAAoC,EAAAE,EAAA,IAAAA,GACAA,GAIAtC,EAAAuC,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAAvD,KAAAoD,EAAAC,IAGtDzD,EAAAqB,EAAA,GAGArB,EAAAgC,KAIAhC,IAAA4D,EAAA,sTCxJA,IAAIC,EAAuB,KACvBC,KACAC,EAAa,KAKjB,MACIC,EAAmB,IAAIvD,QAAwBC,GAAWmD,EAAuBnD,GAEjFuD,EAAmBjE,EAAAK,EAAA,GAAAM,KAAAX,EAAAsD,KAAA,SACF,KAAYY,EAAAC,UAAA,qBACzB,MACIC,SAAoBH,GAAkBG,WACtCC,QAAgBL,EAEpBD,EAAa,IAAIK,EAAWC,GAC5BP,EAAoBhD,QAAQwD,GAAOP,EAAYQ,UAAUD,IACzDR,OAPa,GAUNU,MAAMC,IAQjBC,aAHIC,KAAM,kBACNF,IAAK,GAAKA,IAGdG,WAAW,KAAQ,MAAMH,GAAQ,KAGrCF,UAAYM,KACR,MAAMP,EAAMO,EAAGC,KACE,gBAAbR,EAAIK,KACAd,IACAA,EAAqBS,GACrBT,EAAuB,MAGvBE,EAAYA,EAAWQ,UAAUD,GAChCR,EAAoBtD,KAAK8D","file":"worker.f0496f2840e727058926.js","sourcesContent":[" \tself[\"webpackChunk\"] = function webpackChunkCallback(chunkIds, moreModules) {\n \t\tfor(var moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\twhile(chunkIds.length)\n \t\t\tinstalledChunks[chunkIds.pop()] = 1;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"1\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t1: 1\n \t};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \tfunction promiseResolve() { return Promise.resolve(); }\n\n \tvar wasmImportObjects = {\n \t\t8: function() {\n \t\t\treturn {\n \t\t\t\t\"./julia_wasm\": {\n \t\t\t\t\t\"__wbindgen_throw\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[7].exports[\"__wbindgen_throw\"](p0i32,p1i32);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t};\n \t\t},\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n \t\tpromises.push(Promise.resolve().then(function() {\n \t\t\t// \"1\" is the signal for \"already loaded\"\n \t\t\tif(!installedChunks[chunkId]) {\n \t\t\t\timportScripts(\"\" + ({\"3\":\"workerCore\"}[chunkId]||chunkId) + \".\" + {\"3\":\"c61bdee2e7fd1b9c3878\"}[chunkId] + \".js\");\n \t\t\t}\n \t\t}));\n\n \t\t// Fetch + compile chunk loading for webassembly\n\n \t\tvar wasmModules = {\"3\":[8]}[chunkId] || [];\n\n \t\twasmModules.forEach(function(wasmModuleId) {\n \t\t\tvar installedWasmModuleData = installedWasmModules[wasmModuleId];\n\n \t\t\t// a Promise means \"currently loading\" or \"already loaded\".\n \t\t\tif(installedWasmModuleData)\n \t\t\t\tpromises.push(installedWasmModuleData);\n \t\t\telse {\n \t\t\t\tvar importObject = wasmImportObjects[wasmModuleId]();\n \t\t\t\tvar req = fetch(__webpack_require__.p + \"\" + {\"8\":\"830138de6d4e66b492c4\"}[wasmModuleId] + \".module.wasm\");\n \t\t\t\tvar promise;\n \t\t\t\tif(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\n \t\t\t\t\tpromise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(items[0], items[1]);\n \t\t\t\t\t});\n \t\t\t\t} else if(typeof WebAssembly.instantiateStreaming === 'function') {\n \t\t\t\t\tpromise = WebAssembly.instantiateStreaming(req, importObject);\n \t\t\t\t} else {\n \t\t\t\t\tvar bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n \t\t\t\t\tpromise = bytesPromise.then(function(bytes) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(bytes, importObject);\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t\tpromises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\n \t\t\t\t\treturn __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n \t\t\t\t}));\n \t\t\t}\n \t\t});\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all WebAssembly.instance exports\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import { MessageToWorker, IWorkerInitMsg, WorkerInstructionMsg, IStartupFailureMsg } from '../shared/messages';\nimport { MemoryPool } from '../shared/memoryPool';\n// IMPORTANT: Only importing the WorkerCoreType synchronously.\n// This is a type-only import that will get removed by typescript before processing by webpack.\n// We import that the actual WorkerCore class constructor via a dynamic import below.\n// This is b/c currently webpack can only import wasm in dependency graphs rooted in a dynamic import.\nimport { WorkerCoreType } from './workerCore';\n\nlet resolveWorkerInitMsg = null as ((msg : IWorkerInitMsg) => void) | null,\n    initialInstructions = [] as WorkerInstructionMsg[],\n    workerCore = null as WorkerCoreType | null;\n\n// Put bootstrapping code behind Promises.\n// The goal is to get enough info to construct a WorkerCore, which then\n// takes over processing.\nconst\n    getWorkerInitMsg = new Promise<IWorkerInitMsg>(resolve => resolveWorkerInitMsg = resolve),\n    // Import the workerCore module async/dynamically. This is handled by webpack.\n    importWorkerCore = import(/* webpackChunkName: \"workerCore\" */ './workerCore'),\n    initWorkerCore = (async () => {\n        const\n            WorkerCore = (await importWorkerCore).WorkerCore,\n            initMsg = await getWorkerInitMsg;\n\n        workerCore = new WorkerCore(initMsg);\n        initialInstructions.forEach(msg => workerCore!.onmessage(msg));\n        initialInstructions = [];\n    })();\n\ninitWorkerCore.catch(err => {\n    // The worker has no way of recovering from startup errors.\n    // Send back a specific message to the UI and trigger the Worker's onerror handler.\n    // See https://stackoverflow.com/a/40081158\n    const msg : IStartupFailureMsg = {\n        type: 'startup-failure',\n        err: '' + err\n    };\n    postMessage(msg);\n    setTimeout(() => { throw err; }, 0);\n});\n\nonmessage = ev => {\n    const msg = ev.data as MessageToWorker;\n    if (msg.type === 'worker-init') {\n        if (resolveWorkerInitMsg) {\n            resolveWorkerInitMsg(msg);\n            resolveWorkerInitMsg = null;\n        }\n    } else {\n        if (workerCore) workerCore.onmessage(msg);\n        else initialInstructions.push(msg);\n    }\n};\n"],"sourceRoot":""}